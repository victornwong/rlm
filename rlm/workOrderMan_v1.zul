<?xml version="1.0" encoding="UTF-8"?>
<?page id="workmanmodu"?>
<zk>
<zscript src="rglobal/rglobal.zs" />
<zscript src="rglobal/formMaker_v1.zs" />
<zscript src="rglobal/rlmsql.zs" />
<zscript src="rglobal/uploadedWorksheet_v1.zs" />
<zscript src="rglobal/customerSelector.zs" />
<zscript src="rglobal/stkoutfunc.zs" />
<zscript src="rglobal/wofuncs.zs" />
<zscript src="stockManf/stocklister.zs" />
<zscript src="stockManf/itemsfunc.zs" />
<zscript src="stockManf/outboundlister.zs" />
<zscript>
<![CDATA[
MYTITLE = "WORK ORDER MANAGEMENT";
MYVERSION = "v0.1";
MYPANEL = "worksoriderpanel";
/**
 * @title Purchase requisition and order things - next-gen
 * @author Victor Wong
 * @since 09/09/2015
 * @notes
 * 05/11/2015: button to submit on-site WO to dispatch-pickup table
 * 10/12/2015: contractor field added to keep track of contractor which will claim for certain handling-fees on work-order if items
 * 							are returned to HQ for repair
*/
import java.util.*;
import java.text.*;
import java.io.*;
import java.sql.*;
import java.sql.Date;
import java.lang.Float;
import groovy.sql.Sql;
import org.zkoss.zk.ui.*;
import org.zkoss.zk.zutl.*;
import java.math.BigDecimal;
import java.awt.Color;
import org.zkoss.util.media.AMedia;
import org.zkoss.zul.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.hssf.util.*;
import org.apache.poi.ss.util.*;
import org.victor.*;
sechand = new SecurityFuncs();
myincludeid = Executions.getCurrent().getParameter("myid");
try {
useraccessobj = sechand.getUserAccessObject();
//if(useraccessobj == null) Executions.sendRedirect(MAINLOGIN_PAGE);
} catch (Exception e) {}

DEBUG_MODE = false;
TIMER_DELAY = 8000;

kiboo = new Generals(); sqlhand = new SqlFuncs(); lbhand = new ListboxHandler();
guihand = new GuiFuncs(); luhand = new LookupFuncs(); dmshand = new DMSFuncs();
gridhand = new GridHandler(); ngfun = new NGfuncs(); rwsqlfun = new RWMS_sql();
rlmsql = new rlmSqlFuncs();

LIMIT_SUPPLIERS_LOADING = " limit 100"; // used in supplierfunc.zs
ISACTIVE_SUPPLIER_LOADING = ""; // set this in other modu to get active supplier only: and IsActive=1

glob_sel_stock_code = glob_sel_description = glob_sel_id = "";
glob_sel_workorder = glob_wo_status = glob_wo_priority = glob_wo_stage = glob_sel_arcode = "";
glob_sel_woitemobj = null;

//items_need_update = false;

void woTogButts(boolean iwhat)
{
	Object[] workbutts = { custsel_b, savewometa_b, newitem_b, selstock_b, saveitems_b, remitem_b, updwoitem_b };
	massDisableComponents(workbutts,iwhat);
}

/**
 * Call-back exec from findCustomers.fndcustdclicker . Customize this for other modu
 * @param isel    list-item object
 * @param icid    customer.Id
 * @param iarcode customer.ar_code
 * @param icustn  customer.customer_name
 */
void findcustomer_Callback(Object isel, String icid, String iarcode, String icustn)
{
	selcustomer_pop.close();
	r = getCustomer_Rec(icid); if(r == null) return;
	glob_sel_arcode = iarcode; // save for global usage - going to be saved into db too

	String[] cfl = { "ar_code", "customer_name" , "address1", "address2", "address3", "Address4",
	"contact_person1", "telephone_no", "fax_no", "E_mail" };

	ngfun.populateUI_Data(wocustomermetaboxes,cfl,r); // populate 'em metadata boxes
}

/**
 * Call-back from stock-master listbox clicker - call from stocklister.stkitemdoubelclik() and stocklister.stkitemclik()
 * @param itarget the selected listitem object
 */
void stockItemListbox_callback(Object itarget)
{
	liststkmaster_pop.close();
	woitemslb = things_holder.getFellowIfAny("things_lb");
	if( woitemslb == null) return;

	glob_sel_stock_code = lbhand.getListcellItemLabel(itarget,0);
	glob_sel_description = lbhand.getListcellItemLabel(itarget,1);
	glob_sel_id = lbhand.getListcellItemLabel(itarget,ITM_ID);

	try
	{
		isel = woitemslb.getSelectedItem();
		lbhand.setListcellItemLabel(isel,WOI_STKID_POS, glob_sel_id );
		lbhand.setListcellItemLabel(isel,WOI_STOCKCODE_POS, glob_sel_stock_code );
		lbhand.setListcellItemLabel(isel,WOI_PROBLEM_POS, glob_sel_description );
		lbhand.setListcellItemLabel(isel,WOI_STRUCT_POS,getStockMasterStruct(glob_sel_id));
	} catch (Exception e) {}
}

/**
 * Call-back from listbox onSelect event in wofuncs.woitemdclicker
 * @param isel selected list-item
 */
void woItems_callBack(Object isel)
{
	glob_sel_woitemobj = isel;

	wi_problem_tb.setValue( lbhand.getListcellItemLabel(isel,WOI_PROBLEM_POS) );
	wi_solution_tb.setValue( lbhand.getListcellItemLabel(isel,WOI_SOLUTION_POS) );
	wi_qty_tb.setValue( lbhand.getListcellItemLabel(isel,WOI_QTY_POS) );
	wi_unitprice_tb.setValue( lbhand.getListcellItemLabel(isel,WOI_UPRICE_POS) );

	editwoitem_pop.open(isel);
}

/**
 * obitem_callBack call from outboundlister.outitmdlcick . outbound listbox in windows created by viewSTKOUT_small
 * @param isel [description]
 */
void obitem_callBack(Object isel)
{
}

/**
 * Work-order listbox onSelect call-back
 * @param isel list-item
 */
void workOrder_callBack(Object isel)
{
	glob_sel_workorder = lbhand.getListcellItemLabel(isel,WO_ORIGID_POS);
	glob_wo_stage = lbhand.getListcellItemLabel(isel,WO_STAGE_POS);
	glob_wo_status = lbhand.getListcellItemLabel(isel,WO_STATUS_POS);
	glob_sel_arcode = lbhand.getListcellItemLabel(isel,WO_ARCODE_POS);
	glob_wo_priority = lbhand.getListcellItemLabel(isel,WO_PRIORITY_POS);

	wr = showWorkOrder_meta(glob_sel_workorder);
	woTogButts( (wr.get("status").equals("COMMIT")) ? true : false );
}

/**
 * Work-order listbox double-click call-back
 * @param isel list-item
 */
void workOrder_dc_callBack(Object isel)
{
}

/**
 * WO funcs dispenser
 * @param iwhat button ID
 */
void woFunc(String iwhat)
{
	todaydate =  kiboo.todayISODateTimeString();
	sqlstm = msgtext = ""; renum = false;
	unm = "tester"; try { unm = useraccessobj.username; } catch (Exception e) {}

	woitemslb = things_holder.getFellowIfAny("things_lb");

	if(iwhat.equals("newwork_b")) // insert new WO
	{
		sqlstm = "insert into workorders (datecreated,username,stage,status,work_type,priority,customer_name) values " +
		"('" + todaydate + "','" + unm + "','NEW','DRAFT','WALKIN','NORMAL','NEW CUSTOMER WORK ORDER');";
	}

	if(!glob_sel_workorder.equals("")) // these funcs require a selected work-order
	{
		if(iwhat.equals("savewometa_b")) // save WO metadata
		{
			d = ngfun.getString_fromUI(wocustomermetaboxes);

			if(d[17].equals("")) d[17] = todaydate;
			if(d[19].equals("")) d[19] = todaydate;

			sqlstm = "update workorders set ar_code='" + d[0] + "', customer_name='" + d[1] + "', address1='" + d[2] + "'," +
			"address2='" + d[3] + "', address3='" + d[4] + "', address4='" + d[5] + "', contact='" + d[6] + "', telephone='" + d[7] + "', email='" + d[8] + "', " +
			"work_type='" + d[9] + "', asc_user='" + d[10] + "', model='" + d[11] + "', serial_no='" + d[12] + "', warrantycard='" + d[13] + "', " +
			"remarks='" + d[14] + "', priority='" + d[15] + "', technician='" + d[16] + "', purchase_date='" + d[17] + "', warranty_status='" + d[18] + "', " +
			"appointment_date='" + d[19] + "', appointment_time='" + d[20] + "', dealer_ref='" + d[21] + "', contractor='" + d[22] + "' " +
			"where origid=" + glob_sel_workorder;

			if(DEBUG_MODE) debugbox.setValue(sqlstm);

			// for main work-order management module, no need to update IRIS codings, only technician fulfillment would save IRIS codings
			// saveIRIS_codes(glob_sel_workorder);
		}

		if(iwhat.equals("commitwork_b")) // commit WO
		{
			if(glob_wo_status.equals("DRAFT")) // WO must be DRAFT to commit
			{
				if(Messagebox.show("Once committed, no more changes allowed..", "Are you sure?",
					Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) != Messagebox.YES) return;

				sqlstm = "update workorders set status='COMMIT' where origid=" + glob_sel_workorder;
				woTogButts(true); glob_wo_status = "COMMIT";
				// TODO send notif email
				// TODO add audit-log if required
			}
		}

		if(iwhat.equals("setdraftpo_b")) // set WO to draft - admin access
		{
			sqlstm = "update workorders set status='DRAFT', deliverdate=null, delivery_mode=null, delivery_bill=null, close_work=null, close_by=null where origid=" + glob_sel_workorder;
			woTogButts(false); glob_wo_status = "DRAFT";
		}

		if(iwhat.equals("stgdone_b")) // set stage to DONE - testing purposes
		{
			sqlstm = "update workorders set stage='DONE' where origid=" + glob_sel_workorder;
		}

		if(iwhat.equals("stgnew_b")) // set stage to NEW - testing purposes
		{
			sqlstm = "update workorders set stage='NEW' where origid=" + glob_sel_workorder;
		}

		if(iwhat.equals("delwo_b")) // delete WO - admin access
		{
			if(!glob_wo_stage.equals("DONE"))
			{
				if(Messagebox.show("This will delete the work-order from the system.. inventory NOT reverted automagically", "Are you sure?",
					Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) != Messagebox.YES) return;

				sqlstm = "delete from workorders where origid=" + glob_sel_workorder;
				glob_sel_workorder = ""; // reset to make sure don't interfere with other funcs
				workarea.setVisible(false);

				// TODO must make sure it's not CLOSED - else need to revert the inventory tagged with this WO
			}
			else
			{
				msgtext = "ERR: cannot delete work-order, stage=DONE";
			}
		}

		if(iwhat.equals("settoday_b")) // set WO to today's date
		{
			sqlstm = "update workorders set datecreated='" + todaydate + "' where origid=" + glob_sel_workorder;
		}

		if(iwhat.equals("newitem_b")) // new WO item
		{
			insertWOitem(things_holder,"things_lb",1);
			renum = true;
		}

		if(iwhat.equals("remitem_b")) // remove WO selected items
		{
			removeItemcodes(things_holder,"things_lb");
			renum = true;
		}

		if(iwhat.equals("saveitems_b")) // save WO work items
		{
			msgtext = (saveWO_items(glob_sel_workorder,things_holder,"things_lb")) ? "OK: work items saved.." : "ERR: work items not saved or no items";
		}

		if(iwhat.equals("updwoitem_b")) // update the WO item - call from pop-up
		{
			lbhand.setListcellItemLabel(glob_sel_woitemobj,WOI_PROBLEM_POS, wi_problem_tb.getValue().trim());
			lbhand.setListcellItemLabel(glob_sel_woitemobj,WOI_SOLUTION_POS, wi_solution_tb.getValue().trim());
			lbhand.setListcellItemLabel(glob_sel_woitemobj,WOI_QTY_POS, wi_qty_tb.getValue().trim());
			lbhand.setListcellItemLabel(glob_sel_woitemobj,WOI_UPRICE_POS, wi_unitprice_tb.getValue().trim());

			renum = true;
		}

		if(iwhat.equals("closework_b")) // close work-order
		{
			if(glob_wo_status.equals("COMMIT") && glob_wo_stage.equals("DONE")) // WO must be committed and stage=DONE
			{
				if(Messagebox.show("You are about to close this work-order. Once closed, all parts requested parts will be posted in the inventory", "Are you sure?",
					Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) != Messagebox.YES) return;

				sqlstm = "update workorders set status='CLOSE', close_work='" + todaydate + "', close_by='" + unm + "' where origid=" + glob_sel_workorder;
				// TODO post them requested parts and etc.
				// TODO add audit-log if required
			}
			else
			{
				msgtext = "ERR: work-order is neither COMMITTED or DONE.. cannot CLOSE";
			}
		}

		if(iwhat.equals("deliverwork_b")) // deliver work-order item back to customer
		{
			if(glob_wo_status.equals("COMMIT") && glob_wo_stage.equals("DONE")) // WO must be CLOSE and stage=DONE
			{
				if(Messagebox.show("Please arrange the appropriate mode of delivery and contact the customer", "Are you sure?",
					Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) != Messagebox.YES) return;

				dm = wo_delivery_mode.getSelectedItem().getLabel();
				dab = kiboo.replaceSingleQuotes(wo_delivery_bill.getValue().trim());
				sqlstm = "update workorders set deliverdate='" + todaydate + "', delivery_mode='" + dm + "', delivery_bill='" + dab + "' where origid=" + glob_sel_workorder;
				// TODO add audit-log if required
			}
			else
			{
				msgtext = "ERR: work-order must be COMMITTED and DONE before you can deliver the item back to customer..";
			}
		}

		if(iwhat.equals("suspendwork_b")) // suspend work-order
		{
			if(!glob_wo_stage.equals("DONE")) // WO already done, cannot suspend
			{
				if(Messagebox.show("Do arrange delivery back to customer item of suspended work", "Are you sure?",
					Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) != Messagebox.YES) return;

				sqlstm = "update workorders set status='SUSPEND' where origid=" + glob_sel_workorder;
			}
			else
			{
				msgtext = "ERR: work-order already DONE, please check with supervisor on charges and etc before suspension";
			}
		}

		if(iwhat.equals("printwo_b")) // print committed work-order
		{
			if(glob_wo_status.equals("COMMIT")) printWO_birt(glob_sel_workorder); // Committed WO print only
			else msgtext = "Do commit the work-order first to print..";
		}

		if(iwhat.equals("printwoparts_b")) // print parts/whatever bill used in work-order
		{
			expPrintParts_workorder(glob_sel_workorder);
			printParts_WO_birt(glob_sel_workorder,"");
			
		}
	}

	if(renum)
	{
		recalcSubtotal(woitemslb,WOI_QTY_POS,WOI_UPRICE_POS,WOI_SUBTOTAL_POS);
		gp_calcPOTotal(woitemslb,WOI_SUBTOTAL_POS,wograndtotal_lbl,"");
		gp_calcGST(wograndtotal_lbl,GST_RATE,gst_lbl,"");

		// save grand-total into workorders.charges
		gt = "0";
		try { gt = (Float.parseFloat(wograndtotal_lbl.getValue()) + Float.parseFloat(gst_lbl.getValue())).toString(); } catch (Exception e) {}
		sqlstm = "update workorders set charges=" + gt + " where origid=" + glob_sel_workorder;
	}

	if(!sqlstm.equals(""))
	{
		sqlhand.rws_gpSqlExecuter(sqlstm);
		listWorkOrders(workorder_holder, "wo_lb", startdate, enddate, searhtxt_tb,bywo_tb, last_list_wo, true);
	}
	if(!msgtext.equals("")) guihand.showMessageBox(msgtext);
}

/**
 * Insert a pickup/dispatch order to be handled by dispatcher or on-site technicians
 * Generalize to make it useable in other module - param String array pretty hardcoded at this moment
 * @param recthings string array of stuff to insert into table pickupdisp , size(11)
 * [0] = customer name 					[1] = destination address
 * [2] = contact person 				[3] = contact tel
 * [4] = contact email 					[5] = pickup date
 * [6] = pickup time 						[7] = docu/pickup type
 * [8] = dispatcher 						[9] = job/work order
 * [10] = job w_priority 				[11] = problem/description
 */
void insertPickupOrder_db(String[] recthings, String iunm)
{
	todaydate =  kiboo.todayISODateTimeString();

	sqlstm = "delete from pickupdisp where job_id=" + recthings[9];
	sqlhand.rws_gpSqlExecuter(sqlstm); // delete prev pickup order if any by job-id - no checks on status though (TODO)

	sqlstm = "insert into pickupdisp (datecreated,priority,username,dispatcher,et_action,et_action_time,docu_type," +
	"customer_name,destination,contact_person,contact_tel,contact_email,job_id,priority,notes,delivered) values " +
	"('" + todaydate + "','NORMAL','" + iunm + "','" + recthings[8] + "','" + recthings[5] + "','" + recthings[6] + "','" + recthings[7] + "'," +
	"'" + recthings[0] + "','" + recthings[1] + "','" + recthings[2] + "','" + recthings[3] + "','" + recthings[4] + "'," + recthings[9] + "," +
	"'" + recthings[10] + "','" + recthings[11] + "',0);";

	sqlhand.rws_gpSqlExecuter(sqlstm); //alert(sqlstm);
}

/**
 * Submit a pickup/dispatch order - uses module UI components. If req in other module, make changes accordingly to
 * grab data from the UI comp. Refer to insertPickupOrder_db() on String array pass-parameters
 */
void submitPickupOrder()
{
	String[] kp = new String[12]; // check array reference in insertPickupOrder_db()
	unm = "tester"; try { unm = useraccessobj.username; } catch (Exception e) {}
	d = ngfun.getString_fromUI(wocustomermetaboxes); // refer to pre-defined fields

	kp[0] = d[1]; // map 'em stuff
	kp[1] = d[2] + "\n" + d[3] + "\n" + d[4] + "\n" + d[5];
	kp[2] = d[6]; // contact person
	kp[3] = d[7]; // contact tel
	kp[4] = d[8]; // contact email
	kp[5] = d[19]; // pickup date
	kp[6] = d[20]; // pickup time
	kp[7] = "UNDEF"; // pickup docu-type
	kp[8] = d[16]; // dispatcher or technician
	kp[9] = glob_sel_workorder;
	kp[10] = glob_wo_priority;
	kp[11] = d[14]; // job problem/description submit to pickupdisp.notes

	insertPickupOrder_db(kp,unm);
	putNagText("Onsite appointment/pickup order submitted..");
}

/**
 * Export whatever work-orders in listbox to EXCEL - uses wofuncs.wohds1 as the header for worksheet
 */
void exportAll_Workorders()
{
	if(workorder_holder.getFellowIfAny("wo_lb") != null)
		exportExcelFromListbox(wo_lb, kasiexport, wohds1, "workorders.xls","workorders");
}

]]>
</zscript>

<popup id="woitemsprintout">
	<div id="woitemsprintholder" width="700px" />
</popup>

<popup id="woprintoutput">
	<div id="woprintholder" width="700px" />
</popup>

<popup id="selcustomer_pop">
	<div sclass="shadowbox" style="background:#F0D126" width="650px" >
		<hbox>
			<label value="Search" sclass="k9" />
			<textbox id="searchcust_tb" sclass="k9" />
			<button label="Find / Load" sclass="k9mo" onClick="findCustomers(searchcust_tb,foundcusts_holder,selectcustid)" />
		</hbox>
		<separator height="3px" />
		<hbox>
			<div id="foundcusts_holder" width="400px" />
			<div>
				<label id="selectcustid" sclass="k9mo" multiline="true" />
			</div>
		</hbox>
	</div>
</popup>

<popup id="listpopop">
	<div sclass="shadowbox" style="${LISTPOBACKGROUND}">
		<grid sclass="GridLayoutNoBorder">
			<rows>
				<row style="${LISTPOBACKGROUND}">
					<label value="Start" sclass="wbo" />
					<datebox id="startdate" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />
					<label value="End" sclass="wbo" />
					<datebox id="enddate" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />
				</row>
				<row style="${LISTPOBACKGROUND}" spans="3,1">
					<textbox id="searhtxt_tb" sclass="k9" width="95%" />
					<button label="Load/Find" sclass="k9mo" onClick='listpopop.close();listWorkOrders(workorder_holder, "wo_lb", startdate, enddate, searhtxt_tb,bywo_tb, 1, true)' />
				</row>
				<row style="${LISTPOBACKGROUND}" spans="3,1">
					<textbox id="bywo_tb" sclass="k9" width="50%" />
					<button label="by work-order" sclass="k9mo" onClick='listpopop.close();listWorkOrders(workorder_holder, "wo_lb", startdate, enddate, searhtxt_tb,bywo_tb, 2, true)' />
				</row>
			</rows>
		</grid>
	</div>
</popup>

<popup id="editwoitem_pop">
	<div sclass="shadowbox" style="${SUPP_FORM_STYLE}" >
		<grid sclass="GridLayoutNoBorder" width="500px">
			<rows>
				<row style="${SUPP_FORM_STYLE}">
					<label value="Problem" sclass="k9b" />
					<textbox id="wi_problem_tb" width="97%" height="50px" multiline="true" sclass="k9" />
				</row>
				<row style="${SUPP_FORM_STYLE}">
					<label value="Solution" sclass="k9b" />
					<textbox id="wi_solution_tb" width="97%" height="50px" multiline="true" sclass="k9" />
				</row>
				<row style="${SUPP_FORM_STYLE}">
					<label value="Quantity" sclass="k9b" />
					<textbox id="wi_qty_tb" width="70px" />
				</row>
				<row style="${SUPP_FORM_STYLE}">
					<label value="Unit price" sclass="k9b" />
					<textbox id="wi_unitprice_tb" width="70px" />
				</row>
			</rows>
		</grid>
		<separator height="2px" />
		<button id="updwoitem_b" label="Update" sclass="k9mo" onClick="editwoitem_pop.close(); woFunc(self.getId())" />
	</div>
</popup>

<popup id="deliverywo_pop">
	<div sclass="shadowbox" style="${SUPP_FORM_STYLE}" >
		<grid sclass="GridLayoutNoBorder" width="400px">
			<rows>
				<row style="${SUPP_FORM_STYLE}">
					<label value="Delivery mode" sclass="k9b" />
					<listbox id="wo_delivery_mode" sclass="k9" mold="select" />
				</row>
				<row style="${SUPP_FORM_STYLE}">
					<label value="Airway bill" sclass="k9b" />
					<textbox id="wo_delivery_bill" width="97%" sclass="k9" />
				</row>
			</rows>
		</grid>
		<separator height="2px" />
		<button id="deliverwork_b" label="Update" sclass="k9mo" onClick="deliverywo_pop.close(); woFunc(self.getId())" />
	</div>
</popup>

<popup id="liststkmaster_pop">
	<div sclass="shadowbox" style="${NEWSTOCKITEM_BACKGROUND}" width="800px" >
		<hbox>
			<listbox id="m_stock_cat_lb" sclass="k9" mold="select" />
			<button label="by category" sclass="k9mo" onClick="listStockItems(1)" />
			<listbox id="m_groupcode_lb" sclass="k9" mold="select" />
			<button label="by group" sclass="k9mo" onClick="listStockItems(2)" />
			<listbox id="m_classcode_lb" sclass="k9" mold="select" />
			<button label="by class" sclass="k9mo" onClick="listStockItems(3)" />
			<textbox id="m_searchtext_tb" sclass="k9" />
			<button label="Load/Search" sclass="k9mo" onClick="listStockItems(4)" />
		</hbox>
		<div id="stockitems_holder" />
	</div>
</popup>

<popup id="woreports_pop">
	<div sclass="shadowbox" style="background:#F0D126" >
		<vbox>
			<button label="Export work-orders" sclass="k9mo" onClick="exportAll_Workorders()" />
			<button label="TD: Generate on-call work-orders list" sclass="k9mo" />
			<button label="TD: Generate outsource work-orders list" sclass="k9mo" />
		</vbox>
	</div>
</popup>

<popup id="adminpop">
	<div sclass="shadowbox" style="background:#CE1313">
		<vbox>
			<button id="setdraftpo_b" label="Set draft" onClick="adminpop.close(); woFunc(self.getId())" />
			<button id="settoday_b" label="Set today" onClick="adminpop.close(); woFunc(self.getId())" />
			<button id="stgdone_b" label="Set stage=DONE" onClick="adminpop.close(); woFunc(self.getId())" />
			<button id="stgnew_b" label="Set stage=NEW" onClick="adminpop.close(); woFunc(self.getId())" />
			<button id="delwo_b" label="DELETE" onClick="adminpop.close(); woFunc(self.getId())" />
		</vbox>
	</div>
</popup>

<style src="/real-world.css" />
<style>
	.GridLayoutNoBorder tr.z-row td.z-row-inner, tr.z-row .z-cell, div.z-grid
	{
		border: none; overflow: hidden; zoom: 1;
		border-top: none; border-left: none; border-right: none; border-bottom: none;
	}
	.wbo { font-size:9px;color:#ffffff;font-weight:bold }
</style>

<div width="${PANEL_WIDTH}" style="opacity: 0.8;" >
<panel id="${MYPANEL}" title="${MYTITLE} ${MYVERSION}" border="none" collapsible="true" closable="true" >
<panelchildren style="background:#0C203E">
	<label id="debugbox" multiline="true" style="color:#ffffff" />
	<div sclass="shadowbox" style="background:#6991B8">
		<hbox>
			<button id="listworks_b" label="List" sclass="k9mo" onClick="listpopop.open(self)" />
			<separator width="10px" />
			<button id="newwork_b" label="New work order" sclass="k9mo" onClick="woFunc(self.getId())" />
			<button id="commitwork_b" label="Commit" sclass="k9mo" onClick="woFunc(self.getId())" />
			<button id="printwo_b" label="Print work order" sclass="k9mo" onClick="woFunc(self.getId())" />
			<button id="printwoparts_b" label="Print parts bill" sclass="k9mo" onClick="woFunc(self.getId())" />
			<button id="closework_b" label="Close" sclass="k9mo" onClick="woFunc(self.getId())" />
			<button label="Deliver" sclass="k9mo" onClick="deliverywo_pop.open(self)" />
			<separator width="10px" />
			<button id="suspendwork_b" label="Suspend" sclass="k9mo" style="color:#E81717" onClick="woFunc(self.getId())" />
			<separator width="10px" />
			<button label="Reports" sclass="k9mo" onClick="woreports_pop.open(self)" />
			<button id="adminbut" label="ADMIN" sclass="k9mo" style="color:#E81717" onClick="adminpop.open(self)" visible="false" />
		</hbox>
		<separator height="3px" />
		<div id="workorder_holder" />
	</div>

	<separator height="3px" />
	<div id="workarea" sclass="shadowbox" style="background:#2F6B9C" visible="false">
		<hbox>
			<button id="custsel_b" label="Customer" sclass="k9mo" onClick="selcustomer_pop.open(self)" />
			<button id="savewometa_b" label="Save work-order" sclass="k9mo" onClick="woFunc(self.getId())" />
			<separator width="15px" />
			<label id="showfastmessage_lbl" sclass="wbo" />
		</hbox>
		<separator height="3px" />

		<div style="${WODETAIL_STYLE};padding:3px">
			<hbox>
				<label id="w_origid" sclass="subhead1" />
				<separator width="5px" />
				<label sclass="k9mo" value="Work close" />
				<label id="w_close_work" sclass="wbo" />
				<label sclass="k9mo" value="| Close by" />
				<label id="w_close_by" sclass="wbo" />
				<label sclass="k9mo" value="| Deliver" />
				<label id="w_deliverdate" sclass="wbo" />
				<label sclass="k9mo" value="| Deliver mode" />
				<label id="w_delivery_mode" sclass="wbo" />
				<label sclass="k9mo" value="| Airway bill" />
				<label id="w_delivery_bill" sclass="wbo" />
			</hbox>
		</div>
		<separator height="3px" />

		<hbox>
			<div>
				<grid sclass="GridLayoutNoBorder" width="500px">
					<rows>
						<row spans="1,3" style="${WODETAIL_STYLE}">
							<label value="ARCode" sclass="wbo" />
							<label id="w_ar_code" sclass="wbo" />
						</row>
						<row spans="1,3" style="${WODETAIL_STYLE}">
							<label value="Customer" sclass="wbo" />
							<textbox id="w_customer_name" sclass="k9" width="98%" />
						</row>
						<row spans="1,3" style="${WODETAIL_STYLE}">
							<label value="Address1" sclass="wbo" />
							<textbox id="w_address1" sclass="k9" width="98%" />
						</row>
						<row spans="1,3" style="${WODETAIL_STYLE}">
							<label value="Address2" sclass="wbo" />
							<textbox id="w_address2" sclass="k9" width="98%" />
						</row>
						<row spans="1,3" style="${WODETAIL_STYLE}">
							<label value="Address3" sclass="wbo" />
							<textbox id="w_address3" sclass="k9" width="98%" />
						</row>
						<row spans="1,3" style="${WODETAIL_STYLE}">
							<label value="Address4" sclass="wbo" />
							<textbox id="w_address4" sclass="k9" width="98%" />
						</row>
						<row style="${WODETAIL_STYLE}">
							<label value="Contact" sclass="wbo" />
							<textbox id="w_contact" sclass="k9" width="97%" />
							<label value="Telephone" sclass="wbo" />
							<textbox id="w_telephone" sclass="k9" width="95%" />
						</row>
						<row spans="1,3" style="${WODETAIL_STYLE}">
							<label value="Email" sclass="wbo" />
							<textbox id="w_email" sclass="k9" width="98%" />
						</row>
					</rows>
				</grid>
				<separator height="3px" />
				<hbox>
					<button sclass="k9mo" label="Outbound request:" onClick="viewSTKOUT_small(WorksOrder_ref.getValue())" />
					<label id="WorksOrder_ref" sclass="wbo" />
				</hbox>
			</div>
			<div>
				<grid sclass="GridLayoutNoBorder" width="550px">
					<rows>
						<row style="${WODETAIL_STYLE}">
							<label value="Work type" sclass="wbo" />
							<listbox id="w_work_type" sclass="k9" mold="select" />
							<label value="ASC" sclass="wbo" />
							<listbox id="w_asc_user" sclass="k9" mold="select" />
						</row>
						<row style="${WODETAIL_STYLE}">
							<label value="Model" sclass="wbo" />
							<textbox id="w_model" sclass="k9" width="98%" />
							<label value="Serial No." sclass="wbo" />
							<textbox id="w_serial_no" sclass="k9" width="98%" />
						</row>
						<row style="${WODETAIL_STYLE}">
							<label value="Warranty No." sclass="wbo" />
							<textbox id="w_warrantycard" sclass="k9" width="98%" />
							<label value="Priority" sclass="wbo" />
							<listbox id="w_priority" sclass="k9" mold="select" />
						</row>
						<row style="${WODETAIL_STYLE}">
							<label value="Purchase date" sclass="wbo" />
							<datebox id="w_purchase_date" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />
							<label value="Warranty status" sclass="wbo" />
							<listbox id="w_warranty_status" sclass="k9" mold="select" />
						</row>
						<row style="${WODETAIL_STYLE}" >
							<label value="Dealer ref." sclass="wbo" />
							<textbox id="w_dealer_ref" sclass="k9" />
							<label value="Contractor" sclass="wbo" />
							<listbox id="w_contractor" mold="select" sclass="k9" />
						</row>
						<row style="${WODETAIL_STYLE}" spans="4">
							<label value="Problem description" sclass="wbo" />
						</row>
						<row style="${WODETAIL_STYLE}" spans="4">
							<textbox id="w_remarks" sclass="k9" width="98%" height="80px" multiline="true" />
						</row>
						<row style="${WODETAIL_STYLE}" spans="1,3" >
							<label value="Assign to" sclass="wbo" />
							<listbox id="w_technician" mold="select" sclass="k9" />
						</row>
						<row style="${WODETAIL_STYLE}" >
							<label value="Appointment" sclass="wbo" />
							<datebox id="w_appointment_date" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />
							<label value="Time" sclass="wbo" />
							<textbox id="w_appointment_time" sclass="k9" width="50%" />
						</row>
						<row style="${WODETAIL_STYLE}" spans="2,2" >
							<button label="Submit pickup order" sclass="k9mo" onClick="submitPickupOrder()" />
							<label id="pickuporder_lbl" sclass="wbo" />
						</row>
					</rows>
				</grid>

				<grid sclass="GridLayoutNoBorder" width="500px" visible="false">
					<rows>
						<row style="${WODETAIL_STYLE}" spans="1,2" >
							<label value="IRIS Code: " sclass="wbo" />
							<hbox>
								<label id="iris_condition_code" value="00" />
								<label value="-" />
								<label id="iris_problem_code" value="000" />
								<label value="-" />
								<label id="iris_extended_code" value="00" />
							</hbox>
						</row>
						<row style="${WODETAIL_STYLE}">
							<listbox id="iris_condition" mold="select" sclass="k9" width="130px" />
							<hbox>
								<listbox id="iris_code1" mold="select" sclass="k9" width="130px" onSelect="irisCodeOnSelect(self,iris_code2,iriscode_dd)" />
								<listbox id="iris_code2" mold="select" sclass="k9" width="130px" onSelect="irisCodeOnSelect(iris_code1,self,iriscode_dd)" />
							</hbox>
							<listbox id="iris_extended" mold="select" sclass="k9" width="130px" visible="false" />
						</row>
						<row style="${WODETAIL_STYLE}">
							<separator />
							<listbox id="iriscode_dd" mold="select" sclass="k9" width="260px" onSelect="irisFullCodeOnSelect(self,iris_problem_code)" />
							<separator />
						</row>
						<row style="${WODETAIL_STYLE}" spans="1,2">
							<label value="Position" sclass="wbo" />
							<listbox id="iris_position" mold="select" sclass="k9" />
						</row>
						<row style="${WODETAIL_STYLE}" spans="1,2">	
							<label value="Defect" sclass="wbo" />
							<listbox id="iris_defect" mold="select" sclass="k9" />
						</row>
						<row style="${WODETAIL_STYLE}" spans="1,2">
							<label value="Repair" sclass="wbo" />
							<listbox id="iris_repair" mold="select" sclass="k9" />
						</row>
						<row style="${WODETAIL_STYLE}" spans="1,2">
							<label value="Section" sclass="wbo" />
							<listbox id="iris_section" mold="select" sclass="k9" />
						</row>
					</rows>
				</grid>
			</div>
		</hbox>

		<separator height="3px" />
		<div style="background:#8BBD3B" height="5px" />
		<separator height="3px" />

		<div id="thingsarea">
			<hbox>
				<button id="newitem_b" label="New item" sclass="k9mo" onClick="woFunc(self.getId())" disabled="true" />
				<button id="selstock_b" label="Select parts" sclass="k9mo" onClick="liststkmaster_pop.open(self)" disabled="true" />
				<button id="saveitems_b" label="SAVE items" sclass="k9mo" onClick="woFunc(self.getId())" disabled="true" />
				<separator width="10px" />
				<button id="remitem_b" label="Remove" sclass="k9mo" onClick="woFunc(self.getId())" disabled="true" />
			</hbox>
			<separator height="3px" />
			<div id="things_holder" />
			<div style="text-align:right;padding-right:10px">
					<grid sclass="GridLayoutNoBorder">
						<rows>
							<row style="background:#8B0103" >
								<label value="Grand total :" sclass="subhead1" />
								<label id="wograndtotal_lbl" sclass="subhead1" />
							</row>
							<row style="background:#8B0103" >
								<label value="GST :" sclass="subhead1" />
								<label id="gst_lbl" sclass="subhead1" />
							</row>
						</rows>
					</grid>
			</div>
		</div>
	</div>

	<separator height="3px" />
	<div id="nagbar" style="${NAG_BAR_STYLE}">
		<hbox>
			<separator width="10px" />
			<label id="nagtext" multiline="true" sclass="blink" style="font-size:9px;font-weight:bold" />
		</hbox>
	</div>
	<timer id="nagtimer" delay="${NAG_TIMER_DELAY}" repeats="true" onTimer="nagtimerFunc()" />

	<div id="windowsholder" />
	<div id="kasiexport" visible="false" />
	<timer id="maintimer" delay="${TIMER_DELAY}" repeats="true" onTimer="timerFunc()" />
<zscript>
<![CDATA[

void timerFunc()
{
	showfastmessage_lbl.setValue("");
}

initIRIS_selector();

Object[] wocustomermetaboxes = { 
	w_ar_code, w_customer_name, w_address1, w_address2, w_address3, w_address4,
	w_contact, w_telephone, w_email, w_work_type, w_asc_user, w_model, w_serial_no, w_warrantycard, w_remarks, w_priority, w_technician, w_purchase_date,
	w_warranty_status, w_appointment_date, w_appointment_time, w_dealer_ref, w_contractor };

String[] wocustomermfields = {
	"ar_code", "customer_name", "address1", "address2", "address3", "address4",
	"contact", "telephone", "email", "work_type", "asc_user", "model", "serial_no", "warrantycard", "remarks", "priority", "technician", "purchase_date",
	"warranty_status", "appointment_date", "appointment_time", "dealer_ref", "contractor" };

Object[] woextrameta = { w_close_work, w_close_by, w_deliverdate, w_delivery_mode, w_delivery_bill };
String[] woextramfields = { "close_work", "close_by", "deliverdate", "delivery_mode", "delivery_bill" };

luhand.populateListbox_ByLookup(w_priority, "PRIORITY", 2);
luhand.populateListbox_ByLookup(w_work_type, "WO_WORKTYPE", 2);
luhand.populateListbox_ByLookup(w_asc_user, "WO_ASC_OUTSOURCE", 2);
luhand.populateListbox_ByLookup(wo_delivery_mode, "DELIVERY_MODE", 2);
luhand.populateListbox_ByLookup(w_technician,"TECHNICIANS",2);
luhand.populateListbox_ByLookup(w_warranty_status,"WARRANTY_STATUS",2);
luhand.populateListbox_ByLookup(w_contractor,"SERVICE_CONTRACTOR",2);

fillStockMasterSelectorDropdowns(); // stocklister.zs

if(useraccessobj.accesslevel == 9)
{
	adminbut.setVisible(true);
}

]]>
</zscript>
</panelchildren>
</panel>
</div>
</zk>
